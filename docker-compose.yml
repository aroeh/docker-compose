version: '3.9'

networks:
  default:

services:
  cache:
    image: redis
    container_name: redis-cache
    networks:
      - default
    restart: always
    ports:
      - 6379:6379
  #   command: redis-server --save 20 1 --loglevel warning --requirepass <password> # authentication command
  #   volumes: # volume binding for persistent cache
  #     - cache:/data

  rabbitmq_mgmt: 
    image: rabbitmq:management
    container_name: msg-queue-admin-ui
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - default

  weather_receiver:
    image: ${DOCKER_REGISTRY-}weatherreceiver
    container_name: weather-receiver
    networks:
      - default
    build:
      context: ./mq-receiver-service/mq-receiver-service
      dockerfile: Dockerfile
    ports:
      - 7001:80
    depends_on:
      - rabbitmq_mgmt
    environment:
      - RABBITMQ_HOST=rabbitmq_mgmt
      - ASPNETCORE_ENVIRONMENT=Development
      
  weather_api:
    image: ${DOCKER_REGISTRY-}weatherapi
    container_name: weather-api
    networks:
      - default
    build:
      context: ./weather_api/weather_api
      dockerfile: Dockerfile
    ports:
      - 6001:80
      - 6002:443
    depends_on:
      - cache
      - rabbitmq_mgmt
    environment:
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq_mgmt
      - RABBITMQ_QUEUE=weather
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=6002
      - ASPNETCORE_Kestrel__Certificates__Default__Password=certpassword
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/dockerquickstart.pfx
    volumes:
      - ~/.aspnet/https:/https:ro

  blazor_app:
    image: ${DOCKER_REGISTRY-}blazorwasmapp
    container_name: blazor-app
    networks:
      - default
    depends_on:
      - weather_api
    build:
      context: ./blazor_app/blazor_app
      dockerfile: Dockerfile
    ports:
      - 4001:80
    #   - 4002:443
    # environment:
    #   - ASPNETCORE_URLS=https://+:443;http://+:80
    # volumes:
    #   - ~/.aspnet/https:/https:ro
  
  angular_app:
    image: ${DOCKER_REGISTRY-}angularapp
    container_name: angular-app
    networks:
      - default
    depends_on:
      - weather_api
    build:
      context: ./angular_app
      dockerfile: Dockerfile
    ports:
      - 5001:80